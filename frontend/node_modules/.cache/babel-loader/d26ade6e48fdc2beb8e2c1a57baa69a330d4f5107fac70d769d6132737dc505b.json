{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { useAuth } from \"../context/AuthContext\";\n// import Modal from \"react-modal\";\n// import jsPDF from \"jspdf\";\n// import \"jspdf-autotable\"; // Import the autoTable\n// Modal.setAppElement(\"#root\");\n\n// function VisitorDashboard() {\n//   const { visitoruser, visitorlogout } = useAuth();\n//   const [outpassRequests, setOutpassRequests] = useState([]);\n//   const [fromTime, setFromTime] = useState(\"\");\n//   const [toTime, setToTime] = useState(\"\");\n//   const [reason, setReason] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [successMessage, setSuccessMessage] = useState(\"\");\n//   const [activeTab, setActiveTab] = useState(\"pending\");\n//   const [selectedOutpass, setSelectedOutpass] = useState(null);\n//   const [profileView, setProfileView] = useState(false);\n//   const user=visitoruser;\n//   const apiUrl = process.env.REACT_APP_API_URL;\n\n//   useEffect(() => {\n//     console.log(\"heloo\",visitoruser)\n\n//     const fetchOutpassHistory = async () => {\n//       try {\n//         const token = localStorage.getItem(\"token-visitor\");\n//         const response = await fetch(`${apiUrl}/api/visitor/outpass-history`, {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         });\n//         if (!response.ok) {\n//           throw new Error(\"Failed to fetch outpass history\");\n//         }\n//         const data = await response.json();\n//         setOutpassRequests(data.outpasses);\n//       } catch (err) {\n//         console.error(err);\n//       }\n//     };\n\n//     fetchOutpassHistory();\n//   }, [apiUrl]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Validate the 'From Time' and 'To Time'\n//     if (new Date(fromTime) >= new Date(toTime)) {\n//       setError(\"From time must be earlier than To time.\");\n//       return;\n//     }\n\n//     // Check for overlapping outpasses\n//     const hasOverlap = outpassRequests.some((outpass) => {\n//       const outpassFromTime = new Date(outpass.fromTime);\n//       const outpassToTime = new Date(outpass.toTime);\n//       const newFromTime = new Date(fromTime);\n//       const newToTime = new Date(toTime);\n\n//       return (\n//         (newFromTime >= outpassFromTime && newFromTime < outpassToTime) ||\n//         (newToTime > outpassFromTime && newToTime <= outpassToTime) ||\n//         (newFromTime <= outpassFromTime && newToTime >= outpassToTime)\n//       );\n//     });\n\n//     if (hasOverlap) {\n//       setError(\"You already have an outpass during this time period.\");\n//       return;\n//     }\n\n//     try {\n//       const token = localStorage.getItem(\"token-visitor\");\n//       const response = await fetch(`${apiUrl}/api/visitor/request-outpass`, {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${token}`,\n//         },\n//         body: JSON.stringify({ fromTime, toTime, reason }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to request outpass\");\n//       }\n\n//       const data = await response.json();\n\n//       // Update the outpassRequests state with the new outpass\n//       setOutpassRequests([...outpassRequests, data.outpass]);\n\n//       // Clear the form and show success message\n//       setSuccessMessage(\"Outpass request submitted successfully!\");\n//       setFromTime(\"\");\n//       setToTime(\"\");\n//       setReason(\"\");\n//       setError(\"\");\n//     } catch (err) {\n//       console.error(err);\n//       setError(\"Failed to request outpass. Please try again.\");\n//     }\n//   };\n\n//   const generatePDF = (outpass) => {\n//     const doc = new jsPDF();\n\n//     // Title\n//     doc.setFontSize(20);\n//     doc.setFont(\"helvetica\", \"bold\");\n//     doc.setTextColor(0, 0, 255); // Blue color for title\n//     doc.text(\"Visitor Outpass Details\", 20, 20);\n\n//     // Add a line separator\n//     doc.setLineWidth(0.75);\n//     doc.setDrawColor(0, 0, 255); // Blue color for separator\n//     doc.line(20, 22, 190, 22);\n\n//     // Big Box Border\n//     doc.setDrawColor(0, 0, 255); // Blue color for box border\n//     doc.setLineWidth(0.5);\n//     doc.rect(15, 25, 180, 160); // Adjusted height for better fit\n\n//     // Visitor Details Section\n//     doc.setFontSize(14);\n//     doc.setFont(\"helvetica\", \"bold\");\n//     doc.setTextColor(0, 0, 255); // Blue color for section heading\n//     doc.text(\"Visitor Information\", 20, 35);\n\n//     doc.setFontSize(12);\n//     doc.setFont(\"helvetica\", \"normal\");\n//     doc.setTextColor(0, 0, 0); // Black color for text\n//     const visitorInfo = [\n//       `Name: ${user.visitorName}`,\n//       `Contact: ${user.visitorContact}`,\n//       `Email: ${user.visitoremail}`,\n//     ];\n//     visitorInfo.forEach((line, index) => {\n//       doc.text(line, 20, 45 + index * 10);\n//     });\n\n//     // Outpass Details Section\n//     doc.setFontSize(14);\n//     doc.setFont(\"helvetica\", \"bold\");\n//     doc.setTextColor(0, 0, 255); // Blue color for section heading\n//     doc.text(\"Outpass Details\", 20, 85);\n\n//     doc.setFontSize(12);\n//     doc.setFont(\"helvetica\", \"normal\");\n//     doc.setTextColor(0, 0, 0); // Black color for text\n//     const outpassDetails = [\n//       `From: ${new Date(outpass.fromTime).toLocaleString()}`,\n//       `To: ${new Date(outpass.toTime).toLocaleString()}`,\n//       `Reason: ${outpass.reason}`,\n//       `Status: ${outpass.status}`,\n//     ];\n//     outpassDetails.forEach((line, index) => {\n//       doc.text(line, 20, 95 + index * 10);\n//     });\n\n//     // Footer\n//     doc.setFontSize(10);\n//     doc.setFont(\"helvetica\", \"italic\");\n//     doc.setTextColor(100, 100, 100); // Gray color for footer\n//     doc.text(`Generated on ${new Date().toLocaleDateString()}`, 20, 150);\n\n//     // Save the PDF\n//     const formattedDate = new Date(outpass.fromTime)\n//       .toISOString()\n//       .replace(/[-T:\\.Z]/g, \"\");\n//     doc.save(`${user.visitorName}-outpass-${formattedDate}.pdf`);\n//   };\n\n//   const approvedOutpasses = outpassRequests.filter(\n//     (outpass) => outpass.status === \"approved\"\n//   );\n//   const pendingOutpasses = outpassRequests.filter(\n//     (outpass) => outpass.status === \"pending\"\n//   );\n//   const pastOutpasses = outpassRequests.filter(\n//     (outpass) => new Date(outpass.toTime) < new Date()\n//   );\n\n//   const renderOutpassList = () => {\n//     let outpasses = [];\n//     let label = \"\";\n\n//     switch (activeTab) {\n//       case \"approved\":\n//         outpasses = approvedOutpasses;\n//         label = \"Approved Outpasses\";\n//         break;\n//       case \"pending\":\n//         outpasses = pendingOutpasses;\n//         label = \"Pending Outpasses\";\n//         break;\n//       case \"past\":\n//         outpasses = pastOutpasses;\n//         label = \"Past Outpasses\";\n//         break;\n//       default:\n//         break;\n//     }\n\n//     return (\n//       <div>\n//         <h3 className=\"text-2xl mb-6 font-semibold text-gray-800\">{label}</h3>\n//         <div className=\"h-72 overflow-y-auto\">\n//           {outpasses.length > 0 ? (\n//             <ul>\n//               {outpasses.map((outpass) => (\n//                 <li\n//                   key={outpass._id}\n//                   className=\"mb-6 p-6 border-2 border-gray-300 rounded-lg shadow-xl bg-gray-100 hover:bg-gray-200 transition duration-200\"\n//                 >\n//                   <p className=\"text-xl\">\n//                     <strong>From:</strong>{\" \"}\n//                     {new Date(outpass.fromTime).toLocaleString()}\n//                   </p>\n//                   <p className=\"text-xl\">\n//                     <strong>To:</strong>{\" \"}\n//                     {new Date(outpass.toTime).toLocaleString()}\n//                   </p>\n//                   <p className=\"text-xl\">\n//                     <strong>Reason:</strong> {outpass.reason}\n//                   </p>\n//                   <p className=\"text-xl font-semibold mb-4 flex items-center\">\n//                     <span className=\"mr-2 font-bold text-gray-800\">\n//                       Status:\n//                     </span>\n//                     <span\n//                       className={`px-3 py-1 rounded-full text-sm font-medium uppercase ${\n//                         outpass.status === \"approved\"\n//                           ? \"bg-green-200 text-green-800\"\n//                           : outpass.status === \"pending\"\n//                           ? \"bg-yellow-200 text-yellow-800\"\n//                           : \"bg-red-200 text-red-800\"\n//                       }`}\n//                     >\n//                       {outpass.status}\n//                     </span>\n//                   </p>\n//                   {outpass.status === \"approved\" && (\n//                     <button\n//                       onClick={() => generatePDF(outpass)}\n//                       className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n//                     >\n//                       Download PDF\n//                     </button>\n//                   )}\n//                 </li>\n//               ))}\n//             </ul>\n//           ) : (\n//             <p>No outpasses found</p>\n//           )}\n//         </div>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div className=\"p-8\">\n//       <h1 className=\"text-3xl font-bold mb-6\">Visitor Dashboard</h1>\n//       <button\n//         onClick={() => setProfileView(true)}\n//         className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 mb-4\"\n//       >\n//         View Profile\n//       </button>\n//       <button\n//         onClick={() => visitorlogout()}\n//         className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 mb-4\"\n//       >\n//         Logout\n//       </button>\n//       <form onSubmit={handleSubmit} className=\"mb-8\">\n//         <h2 className=\"text-2xl mb-4 font-semibold text-gray-800\">\n//           Request Outpass\n//         </h2>\n//         <div className=\"mb-4\">\n//           <label htmlFor=\"fromTime\" className=\"block text-lg font-medium text-gray-700\">\n//             From Time\n//           </label>\n//           <input\n//             type=\"datetime-local\"\n//             id=\"fromTime\"\n//             value={fromTime}\n//             onChange={(e) => setFromTime(e.target.value)}\n//             className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-4\">\n//           <label htmlFor=\"toTime\" className=\"block text-lg font-medium text-gray-700\">\n//             To Time\n//           </label>\n//           <input\n//             type=\"datetime-local\"\n//             id=\"toTime\"\n//             value={toTime}\n//             onChange={(e) => setToTime(e.target.value)}\n//             className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-4\">\n//           <label htmlFor=\"reason\" className=\"block text-lg font-medium text-gray-700\">\n//             Reason\n//           </label>\n//           <textarea\n//             id=\"reason\"\n//             value={reason}\n//             onChange={(e) => setReason(e.target.value)}\n//             rows=\"4\"\n//             className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//             required\n//           />\n//         </div>\n//         {error && <p className=\"text-red-600\">{error}</p>}\n//         {successMessage && <p className=\"text-green-600\">{successMessage}</p>}\n//         <button\n//           type=\"submit\"\n//           className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n//         >\n//           Submit Request\n//         </button>\n//       </form>\n//       <div>\n//         <h2 className=\"text-2xl mb-6 font-semibold text-gray-800\">Outpass History</h2>\n//         <div className=\"flex mb-4\">\n//           <button\n//             onClick={() => setActiveTab(\"pending\")}\n//             className={`px-4 py-2 rounded-lg ${\n//               activeTab === \"pending\" ? \"bg-blue-600 text-white\" : \"bg-gray-200 text-gray-800\"\n//             }`}\n//           >\n//             Pending\n//           </button>\n//           <button\n//             onClick={() => setActiveTab(\"approved\")}\n//             className={`ml-4 px-4 py-2 rounded-lg ${\n//               activeTab === \"approved\" ? \"bg-blue-600 text-white\" : \"bg-gray-200 text-gray-800\"\n//             }`}\n//           >\n//             Approved\n//           </button>\n//           <button\n//             onClick={() => setActiveTab(\"past\")}\n//             className={`ml-4 px-4 py-2 rounded-lg ${\n//               activeTab === \"past\" ? \"bg-blue-600 text-white\" : \"bg-gray-200 text-gray-800\"\n//             }`}\n//           >\n//             Past\n//           </button>\n//         </div>\n//         {renderOutpassList()}\n//       </div>\n//       <Modal\n//         isOpen={profileView}\n//         onRequestClose={() => setProfileView(false)}\n//         className=\"bg-white p-6 rounded-lg shadow-lg max-w-md mx-auto\"\n//       >\n//         <h2 className=\"text-2xl font-bold mb-4\">Visitor Profile</h2>\n//         <p><strong>Name:</strong> {user.visitorName}</p>\n//         <p><strong>Contact:</strong> {user.visitorContact}</p>\n//         <p><strong>Email:</strong> {user.visitoremail}</p>\n//         <button\n//           onClick={() => setProfileView(false)}\n//           className=\"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700\"\n//         >\n//           Close\n//         </button>\n//       </Modal>\n//     </div>\n//   );\n// }\n\n// export default VisitorDashboard;","map":{"version":3,"names":[],"sources":["/Users/ayushsinghchauhan/Downloads/dont_delete/outpass/frontend/src/Components/VisitorDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useAuth } from \"../context/AuthContext\";\n// import Modal from \"react-modal\";\n// import jsPDF from \"jspdf\";\n// import \"jspdf-autotable\"; // Import the autoTable\n// Modal.setAppElement(\"#root\");\n\n// function VisitorDashboard() {\n//   const { visitoruser, visitorlogout } = useAuth();\n//   const [outpassRequests, setOutpassRequests] = useState([]);\n//   const [fromTime, setFromTime] = useState(\"\");\n//   const [toTime, setToTime] = useState(\"\");\n//   const [reason, setReason] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [successMessage, setSuccessMessage] = useState(\"\");\n//   const [activeTab, setActiveTab] = useState(\"pending\");\n//   const [selectedOutpass, setSelectedOutpass] = useState(null);\n//   const [profileView, setProfileView] = useState(false);\n//   const user=visitoruser;\n//   const apiUrl = process.env.REACT_APP_API_URL;\n\n//   useEffect(() => {\n//     console.log(\"heloo\",visitoruser)\n\n//     const fetchOutpassHistory = async () => {\n//       try {\n//         const token = localStorage.getItem(\"token-visitor\");\n//         const response = await fetch(`${apiUrl}/api/visitor/outpass-history`, {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         });\n//         if (!response.ok) {\n//           throw new Error(\"Failed to fetch outpass history\");\n//         }\n//         const data = await response.json();\n//         setOutpassRequests(data.outpasses);\n//       } catch (err) {\n//         console.error(err);\n//       }\n//     };\n\n//     fetchOutpassHistory();\n//   }, [apiUrl]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Validate the 'From Time' and 'To Time'\n//     if (new Date(fromTime) >= new Date(toTime)) {\n//       setError(\"From time must be earlier than To time.\");\n//       return;\n//     }\n\n//     // Check for overlapping outpasses\n//     const hasOverlap = outpassRequests.some((outpass) => {\n//       const outpassFromTime = new Date(outpass.fromTime);\n//       const outpassToTime = new Date(outpass.toTime);\n//       const newFromTime = new Date(fromTime);\n//       const newToTime = new Date(toTime);\n\n//       return (\n//         (newFromTime >= outpassFromTime && newFromTime < outpassToTime) ||\n//         (newToTime > outpassFromTime && newToTime <= outpassToTime) ||\n//         (newFromTime <= outpassFromTime && newToTime >= outpassToTime)\n//       );\n//     });\n\n//     if (hasOverlap) {\n//       setError(\"You already have an outpass during this time period.\");\n//       return;\n//     }\n\n//     try {\n//       const token = localStorage.getItem(\"token-visitor\");\n//       const response = await fetch(`${apiUrl}/api/visitor/request-outpass`, {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${token}`,\n//         },\n//         body: JSON.stringify({ fromTime, toTime, reason }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to request outpass\");\n//       }\n\n//       const data = await response.json();\n\n//       // Update the outpassRequests state with the new outpass\n//       setOutpassRequests([...outpassRequests, data.outpass]);\n\n//       // Clear the form and show success message\n//       setSuccessMessage(\"Outpass request submitted successfully!\");\n//       setFromTime(\"\");\n//       setToTime(\"\");\n//       setReason(\"\");\n//       setError(\"\");\n//     } catch (err) {\n//       console.error(err);\n//       setError(\"Failed to request outpass. Please try again.\");\n//     }\n//   };\n\n//   const generatePDF = (outpass) => {\n//     const doc = new jsPDF();\n\n//     // Title\n//     doc.setFontSize(20);\n//     doc.setFont(\"helvetica\", \"bold\");\n//     doc.setTextColor(0, 0, 255); // Blue color for title\n//     doc.text(\"Visitor Outpass Details\", 20, 20);\n\n//     // Add a line separator\n//     doc.setLineWidth(0.75);\n//     doc.setDrawColor(0, 0, 255); // Blue color for separator\n//     doc.line(20, 22, 190, 22);\n\n//     // Big Box Border\n//     doc.setDrawColor(0, 0, 255); // Blue color for box border\n//     doc.setLineWidth(0.5);\n//     doc.rect(15, 25, 180, 160); // Adjusted height for better fit\n\n//     // Visitor Details Section\n//     doc.setFontSize(14);\n//     doc.setFont(\"helvetica\", \"bold\");\n//     doc.setTextColor(0, 0, 255); // Blue color for section heading\n//     doc.text(\"Visitor Information\", 20, 35);\n\n//     doc.setFontSize(12);\n//     doc.setFont(\"helvetica\", \"normal\");\n//     doc.setTextColor(0, 0, 0); // Black color for text\n//     const visitorInfo = [\n//       `Name: ${user.visitorName}`,\n//       `Contact: ${user.visitorContact}`,\n//       `Email: ${user.visitoremail}`,\n//     ];\n//     visitorInfo.forEach((line, index) => {\n//       doc.text(line, 20, 45 + index * 10);\n//     });\n\n//     // Outpass Details Section\n//     doc.setFontSize(14);\n//     doc.setFont(\"helvetica\", \"bold\");\n//     doc.setTextColor(0, 0, 255); // Blue color for section heading\n//     doc.text(\"Outpass Details\", 20, 85);\n\n//     doc.setFontSize(12);\n//     doc.setFont(\"helvetica\", \"normal\");\n//     doc.setTextColor(0, 0, 0); // Black color for text\n//     const outpassDetails = [\n//       `From: ${new Date(outpass.fromTime).toLocaleString()}`,\n//       `To: ${new Date(outpass.toTime).toLocaleString()}`,\n//       `Reason: ${outpass.reason}`,\n//       `Status: ${outpass.status}`,\n//     ];\n//     outpassDetails.forEach((line, index) => {\n//       doc.text(line, 20, 95 + index * 10);\n//     });\n\n//     // Footer\n//     doc.setFontSize(10);\n//     doc.setFont(\"helvetica\", \"italic\");\n//     doc.setTextColor(100, 100, 100); // Gray color for footer\n//     doc.text(`Generated on ${new Date().toLocaleDateString()}`, 20, 150);\n\n//     // Save the PDF\n//     const formattedDate = new Date(outpass.fromTime)\n//       .toISOString()\n//       .replace(/[-T:\\.Z]/g, \"\");\n//     doc.save(`${user.visitorName}-outpass-${formattedDate}.pdf`);\n//   };\n\n//   const approvedOutpasses = outpassRequests.filter(\n//     (outpass) => outpass.status === \"approved\"\n//   );\n//   const pendingOutpasses = outpassRequests.filter(\n//     (outpass) => outpass.status === \"pending\"\n//   );\n//   const pastOutpasses = outpassRequests.filter(\n//     (outpass) => new Date(outpass.toTime) < new Date()\n//   );\n\n//   const renderOutpassList = () => {\n//     let outpasses = [];\n//     let label = \"\";\n\n//     switch (activeTab) {\n//       case \"approved\":\n//         outpasses = approvedOutpasses;\n//         label = \"Approved Outpasses\";\n//         break;\n//       case \"pending\":\n//         outpasses = pendingOutpasses;\n//         label = \"Pending Outpasses\";\n//         break;\n//       case \"past\":\n//         outpasses = pastOutpasses;\n//         label = \"Past Outpasses\";\n//         break;\n//       default:\n//         break;\n//     }\n\n//     return (\n//       <div>\n//         <h3 className=\"text-2xl mb-6 font-semibold text-gray-800\">{label}</h3>\n//         <div className=\"h-72 overflow-y-auto\">\n//           {outpasses.length > 0 ? (\n//             <ul>\n//               {outpasses.map((outpass) => (\n//                 <li\n//                   key={outpass._id}\n//                   className=\"mb-6 p-6 border-2 border-gray-300 rounded-lg shadow-xl bg-gray-100 hover:bg-gray-200 transition duration-200\"\n//                 >\n//                   <p className=\"text-xl\">\n//                     <strong>From:</strong>{\" \"}\n//                     {new Date(outpass.fromTime).toLocaleString()}\n//                   </p>\n//                   <p className=\"text-xl\">\n//                     <strong>To:</strong>{\" \"}\n//                     {new Date(outpass.toTime).toLocaleString()}\n//                   </p>\n//                   <p className=\"text-xl\">\n//                     <strong>Reason:</strong> {outpass.reason}\n//                   </p>\n//                   <p className=\"text-xl font-semibold mb-4 flex items-center\">\n//                     <span className=\"mr-2 font-bold text-gray-800\">\n//                       Status:\n//                     </span>\n//                     <span\n//                       className={`px-3 py-1 rounded-full text-sm font-medium uppercase ${\n//                         outpass.status === \"approved\"\n//                           ? \"bg-green-200 text-green-800\"\n//                           : outpass.status === \"pending\"\n//                           ? \"bg-yellow-200 text-yellow-800\"\n//                           : \"bg-red-200 text-red-800\"\n//                       }`}\n//                     >\n//                       {outpass.status}\n//                     </span>\n//                   </p>\n//                   {outpass.status === \"approved\" && (\n//                     <button\n//                       onClick={() => generatePDF(outpass)}\n//                       className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n//                     >\n//                       Download PDF\n//                     </button>\n//                   )}\n//                 </li>\n//               ))}\n//             </ul>\n//           ) : (\n//             <p>No outpasses found</p>\n//           )}\n//         </div>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div className=\"p-8\">\n//       <h1 className=\"text-3xl font-bold mb-6\">Visitor Dashboard</h1>\n//       <button\n//         onClick={() => setProfileView(true)}\n//         className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 mb-4\"\n//       >\n//         View Profile\n//       </button>\n//       <button\n//         onClick={() => visitorlogout()}\n//         className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 mb-4\"\n//       >\n//         Logout\n//       </button>\n//       <form onSubmit={handleSubmit} className=\"mb-8\">\n//         <h2 className=\"text-2xl mb-4 font-semibold text-gray-800\">\n//           Request Outpass\n//         </h2>\n//         <div className=\"mb-4\">\n//           <label htmlFor=\"fromTime\" className=\"block text-lg font-medium text-gray-700\">\n//             From Time\n//           </label>\n//           <input\n//             type=\"datetime-local\"\n//             id=\"fromTime\"\n//             value={fromTime}\n//             onChange={(e) => setFromTime(e.target.value)}\n//             className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-4\">\n//           <label htmlFor=\"toTime\" className=\"block text-lg font-medium text-gray-700\">\n//             To Time\n//           </label>\n//           <input\n//             type=\"datetime-local\"\n//             id=\"toTime\"\n//             value={toTime}\n//             onChange={(e) => setToTime(e.target.value)}\n//             className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-4\">\n//           <label htmlFor=\"reason\" className=\"block text-lg font-medium text-gray-700\">\n//             Reason\n//           </label>\n//           <textarea\n//             id=\"reason\"\n//             value={reason}\n//             onChange={(e) => setReason(e.target.value)}\n//             rows=\"4\"\n//             className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//             required\n//           />\n//         </div>\n//         {error && <p className=\"text-red-600\">{error}</p>}\n//         {successMessage && <p className=\"text-green-600\">{successMessage}</p>}\n//         <button\n//           type=\"submit\"\n//           className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n//         >\n//           Submit Request\n//         </button>\n//       </form>\n//       <div>\n//         <h2 className=\"text-2xl mb-6 font-semibold text-gray-800\">Outpass History</h2>\n//         <div className=\"flex mb-4\">\n//           <button\n//             onClick={() => setActiveTab(\"pending\")}\n//             className={`px-4 py-2 rounded-lg ${\n//               activeTab === \"pending\" ? \"bg-blue-600 text-white\" : \"bg-gray-200 text-gray-800\"\n//             }`}\n//           >\n//             Pending\n//           </button>\n//           <button\n//             onClick={() => setActiveTab(\"approved\")}\n//             className={`ml-4 px-4 py-2 rounded-lg ${\n//               activeTab === \"approved\" ? \"bg-blue-600 text-white\" : \"bg-gray-200 text-gray-800\"\n//             }`}\n//           >\n//             Approved\n//           </button>\n//           <button\n//             onClick={() => setActiveTab(\"past\")}\n//             className={`ml-4 px-4 py-2 rounded-lg ${\n//               activeTab === \"past\" ? \"bg-blue-600 text-white\" : \"bg-gray-200 text-gray-800\"\n//             }`}\n//           >\n//             Past\n//           </button>\n//         </div>\n//         {renderOutpassList()}\n//       </div>\n//       <Modal\n//         isOpen={profileView}\n//         onRequestClose={() => setProfileView(false)}\n//         className=\"bg-white p-6 rounded-lg shadow-lg max-w-md mx-auto\"\n//       >\n//         <h2 className=\"text-2xl font-bold mb-4\">Visitor Profile</h2>\n//         <p><strong>Name:</strong> {user.visitorName}</p>\n//         <p><strong>Contact:</strong> {user.visitorContact}</p>\n//         <p><strong>Email:</strong> {user.visitoremail}</p>\n//         <button\n//           onClick={() => setProfileView(false)}\n//           className=\"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700\"\n//         >\n//           Close\n//         </button>\n//       </Modal>\n//     </div>\n//   );\n// }\n\n// export default VisitorDashboard;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}